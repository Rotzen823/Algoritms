#include <bits/stdc++.h>
#define INF 200000000

using namespace std;

typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;

struct Grafo{
    int V;
    vector<vi> adj;
    vector<vi> dist;

    void init(int _V){
        V = _V;
        adj.assign(V, vi(V, 0));
    }

    void ae(int a, int b, int c){ adj[a][b] = c; }

    void floyd_warshall(){
        dist.assign(V, vi(V, 0));
        for (int i = 0; i < V; i++) {
            for (int j = 0; j < V; j++) {
                if (i == j)
                    dist[i][j] = 0;
                else if (adj[i][j])
                    dist[i][j] = adj[i][j];
                else dist[i][j] = INF;
            }
        }

        for (int k = 0; k < V; k++) {
            for (int i = 0; i < V; i++) {
                for (int j = 0; j < V; j++) {
                    dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);
                }
            }
        }
    }

};

int main() { 
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

    int n, m;
    cin >> n >> m;
    Grafo g;
    g.init(n);

    while(m--){
        int a, b, c;
        cin >> a >> b >> c;
        g.ae(a, b, c);
        g.ae(b, a, c);
    }

    g.floyd_warshall();

    for(int k = 0; k < n; k++){
        for(int j = 0; j < n; j++){
            cout << k << " -> " << j << ": " << " " << g.dist[k][j] << "\n";
        }
    }

    return 0;
}
